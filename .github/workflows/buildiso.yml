name: 'Build customized NixOS LiveCD ISO'
on:
  push:
  schedule:
    - cron: '30 1 * * */3'
jobs:
  buildiso:
    if: (startsWith(github.event.head_commit.message, 'buildiso:') || (github.event_name == 'schedule'))
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H')"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0
      - name: Install nixFlake
        uses: cachix/install-nix-action@v10
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20200618_377345e/install
      - name: Configure Nix to enable flake
        run: echo "experimental-features = nix-command flakes" | sudo tee -a /etc/nix/nix.conf
      - name: Cache flake.lock
        id: cache-flake
        uses: actions/cache@v2
        with:
          path: ./flake.lock
          key: ${{ runner.os }}-nix-${{ hashfiles('flake.lock') }}
      - name: Build LiveCD ISO image
        id: iso
        if: steps.cache-flake.outputs.cache-hit != 'true'
        run: |
          nix-shell --run "rebuild iso"
          cp "result/iso/$(ls "$(readlink result)/iso/")" ./niximg.iso
          echo "::set-output name=niximg-iso::$(sha512sum ./niximg.iso|cut -d " " -f 1)"
      - name: Create Release
        id: create_release
        if: steps.cache-flake.outputs.cache-hit != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.date.outputs.date}}
          release_name: ${{ steps.date.outputs.date }}
          body: |
            This is an automated LiveCD build built on ${{ steps.date.outputs.date }}.
            The SHA-512 checksum of the image is ${{ steps.iso.outputs.niximg-iso }}.
            See [homepage](https://github.com/JamieMagee/nixos-config) for more information.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        if: steps.cache-flake.outputs.cache-hit != 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./niximg.iso
          asset_name: niximg-${{ steps.date.outputs.date }}.iso
          asset_content_type: application/x-iso9660-image
